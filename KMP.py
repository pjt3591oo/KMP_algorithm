import time

class KMP:
  
  def __init__(self, h, s):
    self.h = h
    self.s = s

    self.f_v = self._get_failure_function()

  def _get_failure_function(self):
    result = {
      0: 0
    }
    begin = 1
    
    while begin < len(self.s):
      a, k =self.com1(self.s, self.s, begin)
      result.update(a)

      begin += k 

    return result

  def com1(self, h, s, begin):
    m = 0
    cnt = len(h[begin:]) 
    a = {}
    
    k = 1

    while cnt:
      is_name = h[begin + m] == self.s[m]
      a.setdefault(begin + m, 0)

      if not is_name: 
        return a, k 
      
      a[begin+ m] = m + 1

      cnt -= 1
      m += 1
      k += 1
      
    return a, k

  def __call__(self):
    begin = 0
    cnt = len(self.h)
    result = []

    while begin + len(self.s) <= cnt:
      moved_begin = self.com2(begin, result)  
      begin = moved_begin

    return result

  def com2(self, begin, result):
    m = 0

    while m < len(self.s):
      is_same = self.h[begin + m] == self.s[m]
      
      if not is_same:
        if m  == 0 : return begin + 1
        return begin + m - self.f_v[m - 1]
      
      m += 1

    result.append(begin)
    return begin + m - self.f_v[m-1]

if __name__ == "__main__":
  print('===== sample0 =====')
  h0 = "ABAABABABC"
  s0 = "ABABAB"
  kmp0 = KMP(h0, s0)
  r0 = kmp0()
  print(r0)

  print('===== sample1 =====')
  h1 = "ABABABABC ABABABD"
  s1 = "ABABACA" 
  kmp1 = KMP(h1, s1)
  r1 = kmp1()
  print(r1)
  
  print('===== sample2 =====')
  h2 = "ABACBAB"
  s2 = "BAB" 
  kmp2 = KMP(h2, s2)
  r2 = kmp2()
  print(r2)
 
  h3 = '''

(주) 소셜뉴스의 개방 및 협업형 인터넷 뉴스를 기본정신으로 삼는다. 초기에는 기사에 대한 편집권이 개방되어, 로그인을 하면 누구나 기사를 수정하거나, 작성, 편집이 가능하였으나 지금은 일반 언론사처럼 운영 시스템이 완전히 바뀌었다.

하와이어의 빠르다(Swift)에서 파생되어 나온 말인 wiki와 tree의 결합으로 다 함께 나무를 가꾸듯 한마디 말을 가치 있는 스토리로 함께 키워 나가자는 의미를 담았다.
1.2. 역사[편집]
2009년 11월 11일 초판 발행. 12월 21일 시험 베타서비스, 2010년 2월 1일 서비스 개시.

처음 생성된지 9개월(2010년 11월)만에 문서 21000건을 돌파, 작성자수도 3300명이 넘어서는 꾸준한 성장을 하는 중이다. [1] 2011년 4월 3일 기준으로 총 31,818개의 문서가 있다.

허핑턴포스트 창립자이자 회장인 아리아나 허핑턴(@ariannahuff)이 아시아 매체 중에서는 유일하게 '위키트리'를 팔로우함.

동년 9월 7일 기준 44,141 개. 6개월 사이 12,000여개의 글이 증가했다. 그리고 6개월 뒤인 2012년 5월 10일 기준 문서수는 68,054개로 24,000여 개의 글이 증가했으니 문서 증가 속도가 점점 빨라지고 있는 셈이다.

2012년 5월 10일 당시 위키 기자는 7,823명이다. 2013년 기준으로 108,172건이 작성되어, 뉴스 수 10만건을 돌파했다. 나무위키의 전신인 2013년 당시의 리그베다 위키 성장속도보다 월등히 빠르기 때문에(하루에 1000여건씩 작성) 2014년 말 경에 리그베다 위키를 추월할 수 있을 것으로 보였으나, 2015년에도 7만개 정도 차이가 나고 있다. [2] 그러나 리그베다 위키와 나무위키의 항목수는 넘겨주기 문서가 포함된 것이다. 넘겨주기를 제외하고 보면 나무위키 위키트리 리그베다위키 모두 비슷한 수준이다. 나무위키의 문서수는 위키트리를 앞서는 반면, 리그베다위키의 문서수는 위키트리에 뒤지고 있다. 리그베다 위키 사유화 사태로 리그베다 위키가 폐쇄되어있던 중에 추월이 일어난 것으로 보인다.

2019년 9월 현재는 46만 건의 문서(스토리)와 17,593명의 기자가 거쳐갔다. 페이스북의 좋아요수는 515만 건으로 600만 건의 인사이트에 이어 2위를 달리고 있다.

청와대에 출입하는 소셜미디어 뉴스매체이기도 한다. http://m.wikitree.co.kr/main/news_view.php?id=341665
1.3. 문제점/비판[편집]
네티즌이 적극적으로 기사를 작성한다는 점은 분명히 장점도 있지만, 책임감 없이 기사를 쓰는 네티즌들이 대부분이며, 업체측에서 무작정 페이지뷰를 늘리기 위해 매체로써의 검증 역할은 손을 놓고 있다 보니 문제점이 생기기도 한다. 이런 점에선 나무위키, 리그베다 위키, 인사이트가 받는 비판과 일맥상통하는 점이 있다고도 할 수 있어 보인다. 또한, 피키캐스트와 더불어 결국 인터넷 펌질자료로 돈버는 매체로 비판을 받음으로서 몸살을 앓고 있는 수준이다.
저작권 침해
SNS나 인터넷 상에서 돌아다니는 글이나 이미지, 혹은 타사의 기사를 무단으로 불펌질하고 인용하기 일쑤이다. 특히 트위터나 각종 커뮤니티에서 작성된 글들을 저작권자의 허락 없이 무단으로 캡쳐하여 자신들의 기사로 송고하면서 자신들의 페이지뷰를 늘리고 있다.

일례로 인터넷 비평 매체인 슬로우뉴스가 일간워스트와 함께 '2014년 우리를 빡치게 한 최악의 발언 TOP 10' 이벤트를 진행하면서 기사를 작성하자, 해당 매체나 작성자의 허락 없이 위키트리가 그 기사를 그대로 화면캡쳐해서 자신들의 기사로 송고했다. 최초 작성자가 이에 항의하자 위키트리 측은 다급히 화면 캡쳐 자료를 텍스트 형태로 바꾸기는 했으나 내용과 구성을 복제한 형태는 바꾸지 않았다.
2017년에는 위키트리가 타 사이트의 자바스크립트 파일을 무단 사용한 것이 밝혀졌다.# 이로인해 자바스크립트 파일이 있는 서버의 트래픽이 급증하는 피해가 발생하였고, 서버 소유자는 자바스크립트 파일을 수정하여 위키트리 페이지를 조작하는 방식으로 대응하였다. 그 결과 잠시동안 위키트리 페이지에 'js라이브러리의 외부 불법링크를 금합니다.'라는 문구가 표시되고 화면이 기울어지게 되었는데, 만약 서버 관리자가 악심을 품고 위키트리를 이용해 바이러스를 유포하였다면 대규모 해킹 사태가 벌어졌었을지도 모르는 일이었다. #

2016년에는 위키트리 본인들의 글을 인사이트가 무단인용했다며 거리낌없이 저작권을 주장했으나#, 결국 본인들도 무단인용을 수시로 저지르는 위키트리의 행태에 대해 '위키트리나 인사이트나 똑같다'라는 비판을 받았다. 2019년 9월, KBS 저널리즘 토크쇼 J에서 인사이트와 함께 대표적인 기생언론으로 공격하자 방송 내용에 대해서 반박하는 입장문을 내놨었다. (입장문) 위키트리 측에서는 자기들을 인사이트와 도매급으로 묶어서 비판하는걸 굉장히 불쾌하게 생각하고 있다고 한다.

위키트리나 인사이트에서 이런 형태의 무단 펌질 기사 송고가 계속 반복되어 최초 저작권자들의 항의가 이어지고 있지만, 업체들의 이런 영업 형태는 별로 바뀌지 않고 있다. 이러한 ctrl+c ctrl+v와 같은 준언론인들의 부적절한 행태는 적절히 개선되어야 한다.[3][4]
가짜뉴스
자극적인 뉴스도 생각없이 퍼나르고 있다. 5월의 게시물중 하나인 "해외의 한 식당에서 인육을 판매하고 있었다. 주방에선 사람의 머리가 발견되었다"란 내용의 기사는 위키트리를 포함, 몇몇의 매체에서만 보도되었는데 얼마 지나지 않아 허위 사실임이 알려졌다. 해외 보도 매체중 하나인 BBC는 오보임을 알렸지만 위키트리는 입을 싹 닫고 나 몰라라... 페이스북의 스브스 뉴스 페이지에서 이러한 행적을 비판하기도 했다. 또한 미국 남부 지역의 경찰차 뒤에 'In God We Trust' 문구를 붙혔다는 것이 논란이 되고 있는데, 최근 경찰의 불미스러운 일에 대해 "경찰이 국시를 활용해 비난을 무마하려 한다" 라고 발언을 하였다. 관련 기사 기사에서는 중립이 표현되지 않고 경찰의 행동에 대해 비판했지만, 국시는 국가적 상징이 매우 크며 미국 달러의 지폐와 동전에도 표기되어 있다. 동일한 논리로 애국가에도 "하느님이 보우하사"를 비판하는 것. 때문에 단순히 애국심을 표출하였다고 주장하는 네티즌들에게 폭풍 까이는 중.

심지어는 편의점 샛별이 관련 논란을 만들기 위해서, 댓글 하나 갖다가 네티즌 하나를 범죄자로 만들어버리는 잘못을 저질렀다. # 해당 내용은 29살 9급 3수 중인 공시생이 카페 알바를 하고 있는데, 8살 어린 알바생이 고백해도 되겠냐는 글이다. 따라서, 8살 어린 학생이면 당연히 21살이므로, 성인인데 마치 흉악범죄자를 만들어놓고 논란이라고 조작질을 하고 있다.
편향성
작성자의 성향이 여과없이 투과되어 중립성이 결여된 기사를 내보내는 경우가 매우 잦으며, 특히 특정 사건을 무리하게 페미니즘과 연관짓는 내용인 경우가 많다. 여기자들의 남성혐오 정도가 매우 심하다. 해당 주제에 대해 글을 쓸 때 '남자는 잠재적 위험도를 내포하고 있다.'는 뉘앙스를 담는 경우가 대부분이다. 게다가 반대로 여성혐오적인 기사 또한 많다. 성범죄 사건에서 가해자의 입장에서 2차 가해를 가하는 등 심각하다. 민감한 주제일수록 중립을 지켜야하는 언론의 본분을 망각하는 행위로, 편향성이 심한 기사일수록 댓글창에서 키배가 벌어지거나 뭇매를 맞는 경우를 자주 볼 수있다. 한마디로 조회수를 벌기 위해 자극적인 기사를 쓰는 전형적인 가짜뉴스.

이런 기사도 있다. 동성애를 근거 없이 악의적으로 혐오하는 점에서 막장이다. 하지만 한 작성자에 관한 극히 일부인 사례이며 기본적으로 위키트리는 동성애 , 페미니즘에 친화적인 진보 스탠스에 치우쳐 있는 매체이다. 그러나 이따금 여성혐오적인 기사를 내보내는 통에 페미니즘 진영에서도 비판이 나오는 편.

이렇게 고인드립성 가짜 뉴스(캡처본, 2020년 1월 기준 기사 삭제됨)가 수개월 이상 버젓이 걸려 있기도 하는 개판 5분전이다. 아무나 기사를 올릴 수 있다는 점이 매우 부정적으로 작용하는 한 예이다.
기타
특정 제품이나 유튜버 등을 뜬금없이 띄워주는, 사실상 노골적인 광고성 기사를 쓰는 경우도 많아지고 있다.
댓글창이 아주 가관이다. 인사이트도 그렇지만 가계정의 수가 타 언론사에 비해 압도적으로 많고 서로 다른 정치 성향의 구독자들이 서로 피 튀기는 키보드 배틀을 펼치는 모습을 어렵지 않게 찾아볼 수 있다.
2. 영어권의 위키 기반 족보 사이트[편집]
(공식 웹사이트)

말 그대로 각 가문의 족보를 만드는 위키이다. 가족 관계도를 그릴 때 나무처럼 가지를 쳐가는 모습에서 위키트리라는 이름이 붙은 것으로 보인다. 위키미디어 재단에 이 위키트리를 인수하라는 요청이 올라와 있다. 다만 위키트리 측 관계자가 제안한 건지 그냥 일반 이용자가 제안한 건지는 알 수 없다.

[1] 그러나 나무위키처럼 사전형식을 취하는게 아니고, 기사 사이트이므로 문서량도 쉽게 잘 늘어나는게 당연할지도.
[2] 리그베다 위키가 망한 뒤로 나무위키의 문서작성 속도를 위키트리의 문서작성 속도와 비교해도 그정도 차이이다.
[3] 개방과 공유와 참여의 서비스를 기본정신으로 삼고 있지만, 무분별하게 아무렇게나 기사를 올리는 위키러들의 행동이 개선되어야 할 것으로 보인다.
[4] 결국 연합뉴스는 언젠가부터 위키트리에 연합뉴스 기사를 그대로 송고한다.
  '''

  s3 = "파일"
  
  h3 = h3.replace('\n', ' ').replace('\r', ' ').replace('\t', ' ')
  start = time.time()  # 시작 시간 저장

  for i in range(0, 1000):
    kmp = KMP(h3, s3)
    m3 = kmp()

  duration = time.time() - start
  
  print('===== sample3 =====')
  print(m3)
  print('소요시간: %f'%(duration))